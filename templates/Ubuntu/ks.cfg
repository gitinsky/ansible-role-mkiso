# {{ ansible_managed }}
#Generated by Kickstart Configurator
#platform=x86

#System language
lang en_US
#Language modules to install
langsupport en_US
#System keyboard
keyboard us
#System mouse
mouse
#System timezone
timezone {{ '--utc' if hostvars[item].host_presets.initial_settings.timezone.utc else '' }} {{ hostvars[item].host_presets.initial_settings.timezone.zone }}
#Root password
rootpw --disabled
#Initial user
# Initial user doesn't seem work on ubuntu (at least 14.04) but is required
user {{ hostvars[item].host_presets.initial_settings.username }} --fullname "{{ hostvars[item].host_presets.initial_settings.username }}" --password {{ hostvars[item].host_presets.initial_settings.password }}
# --iscrypted
#Reboot after installation
reboot
#Use text mode install
text
#Install OS instead of upgrade
install
#Use CDROM installation media
cdrom
# url --url http://us.archive.ubuntu.com/ubuntu/
#System bootloader configuration
bootloader --location=mbr
#Clear the Master Boot Record
zerombr yes
#Partition clearing information
# clearpart --all --initlabel
#Disk partitioning information
preseed --owner partman-basicfilesystems partman-basicfilesystems/no_swap boolean false

#System authorization infomation
auth --useshadow --enablemd5
#Network information
{% set interface = hostvars[item].host_presets[ 'ansible_'+ hostvars[item].host_presets.default_ipv4.device ] %}

network --bootproto={{ interface.proto }} --device={{ hostvars[item].host_presets.default_ipv4.device }}{{' '}}
{%- if interface.proto == 'static' -%}
 --ip={{ interface.address }} --netmask={{ interface.netmask }} --gateway={{ interface.gateway }} --nameserver={{ interface.namesrv }}
{%- endif %}

#Firewall configuration
firewall --disabled
#Do not configure the X Window System
skipx
#Package install information
%packages
acpid
openssh-server
screen
python

# %pre

%post --nochroot
lvremove -f /dev/vg_big/deleteme
lvremove -f /dev/vg_fast/deleteme

%post

install -m 440 /dev/null /etc/sudoers.d/wheel-nopasswd
echo '%wheel        ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/wheel-nopasswd
groupadd wheel

{% for user in hostvars[item].host_presets.initial_settings.extra_users %}
useradd -m -c "{{ user.user }}@{{ hostvars[item].host_presets.hostname }}" -s /bin/bash -G wheel {{ user.user }}
{% if user.nopass is defined and user.nopass %}
passwd -d {{ user.user }}
{% endif %}
{% if user.key is defined %}
install -v -o "{{ user.user }}" -g "{{ user.user }}" -m 750 -d ~{{ user.user }}/.ssh
install -v -o "{{ user.user }}" -g "{{ user.user }}" -m 640 /dev/null ~{{ user.user }}/.ssh/authorized_keys
echo '{{ user.key }}' >  ~{{ user.user }}/.ssh/authorized_keys
{% endif %}
{% endfor %}

# tee -a /etc/modprobe.d/blacklist.conf <<EOF
#
# # Make system reboot on Supermicro Motherboards
# blacklist mei
# blacklist mei_me
# EOF
